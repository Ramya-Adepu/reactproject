[{"D:\\Electives\\myfirstreact\\src\\index.js":"1","D:\\Electives\\myfirstreact\\src\\App.js":"2","D:\\Electives\\myfirstreact\\src\\reportWebVitals.js":"3","D:\\Electives\\myfirstreact\\src\\game\\board.js":"4"},{"size":499,"mtime":1617337985565,"results":"5","hashOfConfig":"6"},{"size":3078,"mtime":1617363079203,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":9376,"mtime":1617442751857,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"yo5yzu",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"D:\\Electives\\myfirstreact\\src\\index.js",[],["21","22"],"D:\\Electives\\myfirstreact\\src\\App.js",["23","24"],"// import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport Board from \"./game/board\";\nimport connect4 from './connect4.jpeg';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <Router>\n\t\t<div >\n      <div class=\"menu\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t{/* <Link to=\"/\" >Home</Link> &nbsp;&nbsp;&nbsp;\n\t\t\t<Link to=\"/about\">About</Link> &nbsp;&nbsp;&nbsp; */}\n     <button class=\"b\"><Link to=\"/\" class=\"link\">Home</Link></button>  &nbsp;&nbsp;&nbsp;\n     <button class=\"b\"><Link to=\"/about\" class=\"link\">Game</Link></button>  &nbsp;&nbsp;&nbsp;\n\t\t\t</div>\n      <h1>Connect 4 Game</h1>\n\t\t</div>\n\t\t\n\t\t<Switch>\n\t\t  {/* <Route exact path=\"/\">\n\t\t\t<Home />\n\t\t  </Route>\n\t\t  <Route path=\"/about\">\n\t\t\t<About />\n\t\t  </Route> */}\n      <Route exact path=\"/\">\n\t\t\t<Home />\n\t\t  </Route>\n\t\t  <Route path=\"/about\">\n\t\t\t<About />\n\t\t  </Route>\n\t\t</Switch>\n\t</Router>\n  );\n}\n\nfunction Home() {\n  return (\n    <div class=\"home\">\n      <h2>Game Intructions:</h2>\n      <ul>\n        <h2>Description</h2>\n        <img src={connect4} class=\"img\"/>\n        <li>This game is played on a vertical board wich has seven hollow columns and six rows.</li>\n        <li>Each column has a hole in the upper part of the board, where pieces are introduced.</li> \n        <li>There is a window for every square, so that pieces can be seen from both sides.</li>\n        <li>In short, itÂ´s a vertical board with 42 windows distributed in 6 rows and 7 columns.</li> \n        <li>Both players have a set of 21 thin pieces (like coins); each of them uses a different colour.</li>\n        <li>The board is empty at the start of the game.</li>\n      </ul>\n      <h2>Objective</h2>\n      <p>The aim for both players is to make a straight line of four own pieces; the line can be vertical, horizontal or diagonal.</p>\n      <h2>How the game goes on</h2>\n      <ul>\n      <li>Before starting, players decide randomly which of them will be the beginner; moves are made alternatively, one by turn.</li>\n      <li>Moves entails in placing new pieces on the board; pieces slide downwards from upper holes, falling down to the last row or piling up on the last piece introduced in the same column.</li>\n      <li>So, in every turn the introduced piece may be placed at most on seven different squares.</li>\n      <li>The winner is the first player who gets a straight line made with four own pieces and no gaps between them.</li>\n      </ul>\n    </div>\n  );\n}\n\nfunction About() {\t\n  return (\n    <div  class=\"home\">\n      <div class=\"board\">\n        {/* <h2>Game page</h2> */}\n        <Board />\n      </div>\n    </div>\n  );\n}\n\n// function Dashboard() {\n//   return (\n//     <div>\n//       <h2>Dashboard</h2>\n//     </div>\n//   );\n// }\n\n// function User() {\n//   let { name } = useParams();\n//   return (\n//     <div>\n//       <h2>Current player : {name}</h2>\n// \t\t\t<li><Link to=\"/user/player1\">player1</Link></li>\n// \t\t\t<li><Link to=\"/user/player2\">player2</Link></li>\n//     </div>\n//   );\n// }\n","D:\\Electives\\myfirstreact\\src\\reportWebVitals.js",[],"D:\\Electives\\myfirstreact\\src\\game\\board.js",["25","26"],"import React from \"react\";\r\nimport './board.css';\r\nclass Board extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            player:1,\r\n            board:  [[0, 0, 0, 0, 0, 0, 0],\r\n                     [0, 0, 0, 0, 0, 0, 0],\r\n                     [0, 0, 0, 0, 0, 0, 0],\r\n                     [0, 0, 0, 0, 0, 0, 0],\r\n                     [0, 0, 0, 0, 0, 0, 0],\r\n                     [0, 0, 0, 0, 0, 0, 0]],\r\n            play1:\"\",\r\n            play2:\"\",\r\n            showStore:true,\r\n            showStore1:true,\r\n            showStore3:true,\r\n            showStore4:false,\r\n            w:\"\",\r\n            w1:\"\",\r\n            btn:\"\"\r\n\r\n        }\r\n    }\r\n    render(){ \r\n        return (\r\n            <div class=\"page\">\r\n                {/* <h2>Welcome to the Game</h2> */}\r\n                <div id=\"outline\" style={{display: this.state.showStore3 ? 'block' : 'none' }}>\r\n                    <div class=\"selection\">\r\n                        <div class=\"in1\">\r\n                            <label class=\"names\">player1</label><br/>\r\n                            <input class=\"input1\" type=\"text\" onChange={this.playerone} name=\"player1\" placeholder=\"player1\"></input>\r\n                            <span class=\"red\"></span>\r\n                        </div>\r\n                        <div class=\"in2\">\r\n                        <label class=\"names\">player2</label><br/>\r\n                            <input class=\"input2\" type=\"text\" onChange={this.playertwo} name=\"player2\" placeholder=\"player2\"></input>\r\n                            <span class=\"green\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <h3 id=\"player\"style={{display: this.state.showStore ? 'block' : 'none' }}>{this.state.w}</h3>\r\n                   <table>\r\n                        <tbody>\r\n                        <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\r\n                        <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\r\n                        <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\r\n                        <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\r\n                        <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\r\n                        <tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div>\r\n                        <label></label><br/>\r\n                            <button class=\"start1\" id=\"start1\" onClick={this.load} name=\"start1\" style={{display: this.state.showStore1 ? 'block' : 'none' }}>Start</button>\r\n                    </div>\r\n                </div>\r\n                <h2 id=\"result\">{this.state.w1}</h2>\r\n                {/* <button id=\"start\" onClick=\"location.reload();\" style={{display: this.state.showStore4 ? 'block' : 'none' }}>restart</button> */}\r\n            </div>\r\n        );\r\n    }\r\n    // reload=()=>{\r\n    //     \"location.reload()\"\r\n    // }\r\n    checkVertical(board) {\r\n        for (let r = 3; r < 6; r++) {\r\n        for (let c = 0; c < 7; c++) {\r\n            if (board[r][c]) {\r\n            if (board[r][c] === board[r - 1][c] &&\r\n                board[r][c] === board[r - 2][c] &&\r\n                board[r][c] === board[r - 3][c]) {\r\n                return board[r][c];    \r\n            }\r\n            }\r\n        }\r\n        }\r\n    }\r\n\r\n    checkHorizontal(board) {\r\n        for (let r = 0; r < 6; r++) {\r\n        for (let c = 0; c < 4; c++) {\r\n            if (board[r][c]) {\r\n            if (board[r][c] === board[r][c + 1] && \r\n                board[r][c] === board[r][c + 2] &&\r\n                board[r][c] === board[r][c + 3]) {\r\n                return board[r][c];\r\n            }\r\n            }\r\n        }\r\n        }\r\n    }\r\n    \r\n    \r\n    checkDiagonalRight(board) {\r\n        for (let r = 3; r < 6; r++) {\r\n        for (let c = 0; c < 4; c++) {\r\n            if (board[r][c]) {\r\n            if (board[r][c] === board[r - 1][c + 1] &&\r\n                board[r][c] === board[r - 2][c + 2] &&\r\n                board[r][c] === board[r - 3][c + 3]) {\r\n                return board[r][c];\r\n            }\r\n            }\r\n        }\r\n        }\r\n    }\r\n    \r\n    playerone=(event)=>{\r\n        var play1=event.target.value;\r\n        this.setState({play1: play1});\r\n    }\r\n    \r\n    playertwo=(event)=>{\r\n        var play2=event.target.value;\r\n        this.setState({play2: play2});\r\n    }\r\n\r\n    checkDiagonalLeft(board) {\r\n        for (let r = 3; r < 6; r++) {\r\n        for (let c = 3; c < 7; c++) {\r\n            if (board[r][c]) {\r\n            if (board[r][c] === board[r - 1][c - 1] &&\r\n                board[r][c] === board[r - 2][c - 2] &&\r\n                board[r][c] === board[r - 3][c - 3]) {\r\n                return board[r][c];\r\n            }\r\n            }\r\n        }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // componentDidMount()\r\n    load=()=>\r\n        {  \r\n        //  document.getElementById(\"start1\").style.display = \"none\";\r\n            this.setState({showStore1:false});\r\n        const grid= document.getElementById(\"outline\");\r\n        // console.log(grid)\r\n        const cells = grid.getElementsByTagName(\"td\");\r\n        for(let i=0; i < cells.length; i++){\r\n            cells[i].addEventListener(\"click\", ()=>{\r\n                var col = i%7\r\n                var row = Math.floor(i/7)\r\n                if(cells[i].style.backgroundColor !== \"red\" && cells[i].style.backgroundColor !==\"lime\"){\r\n                    if(this.state.player === 1){\r\n                        // var p1=document.getElementById(\"player1\")[0].value;\r\n                        // var p1=document.getElementsByName(\"player2\")[0].value\r\n                        // var p2=this.play2\r\n                        // this.setState({play2:p2});\r\n                        var w=\"Next turn: \"+this.state.play2;\r\n                        this.setState({w:w});\r\n                        // document.getElementById(\"player\").innerHTML=\r\n                        cells[i].style.backgroundColor=\"red\";\r\n                        var b = this.state.board\r\n                        b[row][col] = 1\r\n                        this.setState({board: b})\r\n                        // console.log(this.state.board, row, col)\r\n                        this.checkWinner(b)\r\n                        this.setState({player:2});\r\n                    }\r\n                    else if(this.state.player===2){\r\n                        cells[i].style.backgroundColor=\"lime\";\r\n                        // var p2=this.play1\r\n                        // this.setState({play1:p2});\r\n                        var w=\"Next turn: \"+this.state.play1;\r\n                        this.setState({w:w});\r\n                        // console.log(p2)\r\n                        // document.getElementById(\"player\").innerHTML=\"Next turn: \"+`<span style=\"font-size:30px; color:red\">${p2}</span>`;\r\n                        b = this.state.board\r\n                        b[row][col] = 2\r\n                        this.setState({board: b})\r\n                        // console.log(this.state.board, row, col)\r\n                        this.checkWinner(b)\r\n                        this.setState({player:1});\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    checkWinner = (b) =>{\r\n        let w = (this.checkVertical(b) || this.checkDiagonalRight(b) || this.checkDiagonalLeft(b) || this.checkHorizontal(b))\r\n            if(w === 1){\r\n                this.setState({showStore:false});\r\n                var w1=this.state.play1+\" won the match\";\r\n                this.setState({w1:w1})\r\n                // document.getElementById(\"result\").innerHTML = `<h2 class=\"winner\">${this.state.play1}</h2><h2 class=\"winner\"> Won The Game !!!</h2>\r\n                // <h4 class=\"winner\">${this.state.play2}  Better Luck Next Time</h4> `;\r\n                // var btn=\"<button class='btnre' onclick='location.reload()'>play Again</button>\"\r\n                // this.setState({btn:btn});\r\n                this.setState({showStore3:false});\r\n                this.setState({showStore4:true});\r\n                // break;\r\n                // break;\r\n            }\r\n            else if(w === 2){\r\n                this.setState({showStore:false});\r\n                var w1=this.state.play2+\" won the match\";\r\n                this.setState({w1:w1})\r\n                this.setState({showStore3:false});\r\n                // document.getElementById(\"result\").innerHTML = `<h2 class=\"winner\">${this.state.play2}</h2><h2 class=\"winner\">  Won The Game !!!</h2>\r\n                // <h4 class=\"winner\">${this.state.play1}  Better Luck Next Time </h4>`;\r\n                // var btn=\"<button class='btnre' onclick='location.reload()'>play Again</button>\"\r\n                // this.setState({btn:btn});\r\n                // document.getElementById(\"start\").innerHTML=`<button class=\"btnre\" onclick=${\"location.reload()\"}>play Again</button>`;\r\n                this.setState({showStore4:true});\r\n                // break;\r\n            }\r\n            // return w\r\n    }\r\n\r\n    // restart=()=>{\r\n    //     var i=\r\n    //     document.getElementById(\"start\").innerHTML=`<button class=\"btnre\" onclick=${\"location.reload()\"}>play Again</button>`;\r\n    //     this.setState({showStore3:false});\r\n    // }\r\n        \r\n }\r\nexport default Board;\r\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":11,"column":3,"nodeType":"33","messageId":"34","endLine":11,"endColumn":12},{"ruleId":"35","severity":1,"message":"36","line":51,"column":9,"nodeType":"37","endLine":51,"endColumn":42},{"ruleId":"38","severity":1,"message":"39","line":169,"column":29,"nodeType":"33","messageId":"40","endLine":169,"endColumn":30},{"ruleId":"38","severity":1,"message":"41","line":201,"column":21,"nodeType":"33","messageId":"40","endLine":201,"endColumn":23},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-redeclare","'w' is already defined.","redeclared","'w1' is already defined.","no-global-assign","no-unsafe-negation"]